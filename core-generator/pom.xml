<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>vxcore</artifactId>
        <groupId>cn.qaiu</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>core-generator</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Core module dependency -->
        <dependency>
            <groupId>cn.qaiu</groupId>
            <artifactId>core</artifactId>
        </dependency>

            <!-- Vert.x dependencies for generated code -->
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-codegen</artifactId>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-service-proxy</artifactId>
            </dependency>
            
            <!-- Annotation API for @Generated -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
            </dependency>

        <!-- Core database module dependency (optional for code generation) -->
        <dependency>
            <groupId>cn.qaiu</groupId>
            <artifactId>core-database</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Database drivers -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Jackson for JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>

        <!-- Validation API -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.0.2</version>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Command line parsing -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.7.5</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                    <!-- 代码生成器 -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.vertx</groupId>
                            <artifactId>vertx-codegen</artifactId>
                            <version>${vertx.version}</version>
                        </path>
                        <path>
                            <groupId>io.vertx</groupId>
                            <artifactId>vertx-service-proxy</artifactId>
                            <version>${vertx.version}</version>
                        </path>
                        <path>
                            <groupId>com.google.dagger</groupId>
                            <artifactId>dagger-compiler</artifactId>
                            <version>2.57.2</version>
                        </path>
                        <!-- 自定义服务生成注解处理器 -->
                        <path>
                            <groupId>cn.qaiu</groupId>
                            <artifactId>core</artifactId>
                            <version>${project.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <annotationProcessors>
                        <annotationProcessor>cn.qaiu.vx.core.processor.CustomServiceGenProcessor</annotationProcessor>
                        <annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
                        <annotationProcessor>dagger.internal.codegen.ComponentProcessor</annotationProcessor>
                    </annotationProcessors>
                    <generatedSourcesDirectory>
                        ${project.basedir}/src/main/generated
                    </generatedSourcesDirectory>
                    <generatedTestSourcesDirectory>
                        ${project.basedir}/src/test/generated
                    </generatedTestSourcesDirectory>
                </configuration>
            </plugin>

            <!-- Executable JAR plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>cn.qaiu.generator.cli.GeneratorCli</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Clean Plugin - 清理代码生成目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/src/main/generated</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/src/test/generated</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- JaCoCo test coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
